scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, aes(colour = Name, fill = NA), size = 1, colour = black) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, aes(colour = Name, fill = black), size = 1) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, aes(colour = Name, size = 1, fill = NA)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, aes(colour = Name, size = 0.5, fill = NA)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, size = 0.5, aes(colour = Name, fill = NA)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, size = 1, aes(colour = Name, fill = NA)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, size = 1, aes(fill = Name), colour = "black") +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, size = 1, aes(colour = "black", fill = NA)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, colour = "black", fill = NA, size = 1) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, colour = "black", fill = NA, size = 1) +
geom_sf_label(data = total, aes(label = Mine)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, colour = "black", fill = NA, size = 1) +
geom_sf_label(data = total, aes(label = Name)) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
ggplot() +
geom_tile(data = B_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, colour = "black", fill = NA, size = 1) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
B_class20bufTotal <- crop(B_class20buf, total)
B_classbufTotal <- crop(B_classbuf, total)
plot(B_classbufTotal)
plot(total, add=TRUE)
B_classbufTotal <- mask(B_classbuf, total)
B_classbufTotal <- mask(B_classbufTotal, total)
?`mask,SpatRaster,SpatRaster-method`
totalSV <- vect("~/data/raw/mines/total.shp", query = "SELECT Name FROM \"total\" WHERE FID = 0")
B_classbufTotal <- crop(B_classbuf, totalSV)
B_classbufTotal <- terra::crop(B_classbuf, total)
plot(B_classbufTotal)
B_classbufTotal <- terra::crop(B_classbuf, totalSV)
B_classbufTotal <- terra::crop(B_classbuf, total)
B_classbufTotal <- mask(B_classbufTotal, total)
B_classbufTotal <- mask(B_classbufTotal, totalSV)
B_classbufTotal <- terra::mask(B_classbufTotal, total)
B_classbufTotal <- terra::mask(st_zm(B_classbufTotal), total)
B_classbufTotal <- terra::mask(B_classbuf, total)
B_classbufTotal <- terra::mask(B_classbufTotal, st_zm(total))
B_classbufTotal <- terra::crop(B_classbuf, total)
B_classbufTotal <- terra::mask(B_classbufTotal, st_zm(total))
plot(B_classbufTotal)
freq(B_classTotal)*0.0009
rm(B_classbufTotal)
B_classTotal <- terra::crop(B_classbuf, total)
B_classTotal <- terra::mask(B_classbufTotal, st_zm(total))
B_classTotal <- terra::mask(B_classTotal, st_zm(total))
freq(B_classTotal)*0.0009
trainPlma2015    <- spatSample(plma2015_train, size = 8000, method = "random")
table(as.character(trainPlma2015$Classname))
trainPlma2015xy  <- as.matrix(geom(trainPlma2015)[,c('x','y')])
trainPlma15        <- extract(plma2015[[4:6]], trainPlma2015xy)
trainPlma15df      <- data.frame(class = trainPlma2015$Classname, trainPlma15)
trainPlma15dfdf2     <- cbind(trainPlma15df, trainPlma2015xy)
trainPlma15SF       <- st_as_sf(trainPlma15dfdf2, coords = c("x", "y"), crs = moz_crs)
B_class15      <- superClass(plma2015[[4:6]], trainPlma15SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
B_classdf15    <- as.data.frame(B_class15$map, xy = TRUE)
B_class15buf <- crop(B_class15$map, total_buf)
B_class15buf <- mask(B_class15$map, total_buf)
B_class15bufdf    <- as.data.frame(B_class15buf, xy = TRUE)
B_class15bufdf_nna <- na.omit(B_class15bufdf)
ggplot() +
geom_tile(data = B_class15bufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, colour = "black", fill = NA, size = 1) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2015 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
B_class15Total <- crop(B_class15buf, total)
B_class15Total <- terra::mask(B_class15Total, st_zm(total))
plot(B_class15Total)
trainPlma2008    <- spatSample(plma2008_train, size = 8000, method = "random")
table(as.character(trainPlma2008$Classname))
trainPlma2008xy  <- as.matrix(geom(trainPlma2008)[,c('x','y')])
trainPlma08        <- extract(plma2008[[3:5]], trainPlma2008xy)
trainPlma08df      <- data.frame(class = trainPlma2008$Classname, trainPlma08)
trainPlma08dfdf2     <- cbind(trainPlma08df, trainPlma2008xy)
trainPlma08SF       <- st_as_sf(trainPlma08dfdf2, coords = c("x", "y"), crs = moz_crs)
B_class08      <- superClass(plma2008[[3:5]], trainPlma08SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
B_classdf08    <- as.data.frame(B_class08$map, xy = TRUE)
B_class08
B_class08buf <- crop(B_class08$map, total_buf)
B_class08buf <- mask(B_class08$map, total_buf)
B_class08bufdf    <- as.data.frame(B_class08buf, xy = TRUE)
B_class08bufdf_nna <- na.omit(B_class08bufdf)
ggplot() +
geom_tile(data = B_class08bufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = total, fill = NA, colour = "black", size = 1) +
geom_sf(data = plmaPACS, fill = NA) +
geom_sf_text(data = plmaPACS, aes(label = Settlement)) +
labs(x = NULL,
y = NULL,
title = "Palma 2008 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(total))
trainblma2021    <- spatSample(blma2021_train, 8000, method = "random")
table(as.character(trainblma2021$Classname))
trainblma2021xy  <- as.matrix(geom(trainblma2021)[,c('x','y')])
trainblma21      <- extract(blma2021[[3:6]], trainblma2021xy)
trainblma21df      <- data.frame(class = trainblma2021$Classname, trainblma21)
trainblma21df2     <- cbind(trainblma21df, trainblma2021xy)
trainblma21SF       <- st_as_sf(trainblma21df2, coords = c("x", "y"), crs = moz_crs)
Blma2021_class      <- superClass(blma2021[[4:6]], trainblma21SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
Blma2021_classdf    <- as.data.frame(Blma2021_class$map, xy = TRUE)
Blma2021_class
Blma2021_classbuf <- crop(Blma2021_class$map, syrah_buf)
Blma2021_classbuf <- mask(Blma2021_class$map, syrah_buf)
Blma2021_classbufdf    <- as.data.frame(Blma2021_classbuf, xy = TRUE)
Blma2021_classbufdf_nna <- na.omit(Blma2021_classbufdf)
ggplot() +
geom_tile(data = Blma2021_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = syrah, fill=NA, colour = "black", size = 1) +
geom_sf(data = blmaPACS, fill = NA) +
geom_sf_text(data = blmaPACS, aes(label = NomeN1)) +
labs(x = NULL,
y = NULL,
title = "Balama 2021 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colb,
labels = clasb) +
coord_sf(datum = st_crs(syrah))
Blma2021_classSyrah <- crop(Blma2021_classbuf, syrah)
Blma2021_classSyrah <- mask(Blma2021_classSyrah, st_zm(syrah))
plot(Blma2021_classSyrah)
trainblma2015    <- spatSample(blma2015_train, 8000, method = "random")
table(as.character(trainblma2015$Classname))
trainblma2015xy  <- as.matrix(geom(trainblma2015)[,c('x','y')])
trainblma15      <- extract(blma2015[[3:6]], trainblma2015xy)
trainblma15df      <- data.frame(class = trainblma2015$Classname, trainblma15)
trainblma15df2     <- cbind(trainblma15df, trainblma2015xy)
trainblma15SF       <- st_as_sf(trainblma15df2, coords = c("x", "y"), crs = moz_crs)
Blma2015_class      <- superClass(blma2015[[4:6]], trainblma15SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
Blma2015_classdf    <- as.data.frame(Blma2015_class$map, xy = TRUE)
Blma2015_class
Blma2015_classbuf <- crop(Blma2015_class$map, syrah_buf)
Blma2015_classbuf <- mask(Blma2015_class$map, syrah_buf)
Blma2015_classbufdf    <- as.data.frame(Blma2015_classbuf, xy = TRUE)
Blma2015_classbufdf_nna <- na.omit(Blma2015_classbufdf)
ggplot() +
geom_tile(data = Blma2015_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = syrah, fill=NA, colour = "black", size = 1) +
geom_sf(data = blmaPACS, fill = NA) +
geom_sf_text(data = blmaPACS, aes(label = NomeN1)) +
labs(x = NULL,
y = NULL,
title = "Balma 2015 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colb,
labels = clasb) +
coord_sf(datum = st_crs(syrah))
ggplot() +
geom_tile(data = Blma2015_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = syrah, fill=NA, colour = "black", size = 1) +
geom_sf(data = blmaPACS, fill = NA) +
geom_sf_text(data = blmaPACS, aes(label = NomeN1)) +
labs(x = NULL,
y = NULL,
title = "Balama 2015 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colb,
labels = clasb) +
coord_sf(datum = st_crs(syrah))
Blma2015_classSyrah <- crop(Blma2015_classbuf, syrah)
Blma2015_classSyrah <- mask(Blma2015_classSyrah, st_zm(syrah))
plot(Blma2015_classSyrah)
trainblma2009    <- spatSample(blma2009_train, 6000, method = "random")
table(as.character(trainblma2009$Classname))
trainblma2009xy  <- as.matrix(geom(trainblma2009)[,c('x','y')])
trainblma09      <- extract(blma2009[[3:5]], trainblma2009xy)
trainblma09df      <- data.frame(class = trainblma2009$Classname, trainblma09)
trainblma09df2     <- cbind(trainblma09df, trainblma2009xy)
trainblma09SF       <- st_as_sf(trainblma09df2, coords = c("x", "y"), crs = moz_crs)
Blma2009_class      <- superClass(blma2009[[3:5]], trainblma09SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
Blma2009_class
Blma2009_classbuf <- crop(Blma2009_class$map, syrah_buf)
Blma2009_classbuf <- mask(Blma2009_class$map, syrah_buf)
Blma2009_classbufdf    <- as.data.frame(Blma2009_classbuf, xy = TRUE)
Blma2009_classbufdf_nna <- na.omit(Blma2009_classbufdf)
ggplot() +
geom_tile(data = Blma2009_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = syrah, fill=NA, colour = "black", size = 1) +
geom_sf(data = blmaPACS, fill = NA) +
geom_sf_text(data = blmaPACS, aes(label = NomeN1)) +
labs(x = NULL,
y = NULL,
title = "Balama 2009 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colb,
labels = clasb) +
coord_sf(datum = st_crs(syrah))
Blma2009_classSyrah <- crop(Blma2009_classbuf, syrah)
Blma2009_classSyrah <- mask(Blma2009_classSyrah, st_zm(syrah))
plot(Blma2009_classSyrah)
trainancb2020    <- spatSample(ancb2020_train, 8000, method = "random")
table(as.character(trainancb2020$Classname))
trainancb2020xy  <- as.matrix(geom(trainancb2020)[,c('x','y')])
trainancb20      <- extract(ancb2020[[4:6]], trainancb2020xy)
trainancb20df      <- data.frame(class = trainancb2020$Classname, trainancb20)
trainancb20df2     <- cbind(trainancb20df, trainancb2020xy)
trainancb20SF       <- st_as_sf(trainancb20df2, coords = c("x", "y"), crs = moz_crs)
Ancb2020_class      <- superClass(ancb2020[[4:6]], trainancb20SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
Ancb2020_classdf    <- as.data.frame(Ancb2020_class$map, xy = TRUE)
Ancb2020_class
Ancb2020_classbuf <- crop(Ancb2020_class$map, gk_buf)
Ancb2020_classbuf <- mask(Ancb2020_class$map, gk_buf)
Ancb2020_classbufdf    <- as.data.frame(Ancb2020_classbuf, xy = TRUE)
Ancb2020_classbufdf_nna <- na.omit(Ancb2020_classbufdf)
ggplot() +
geom_tile(data = Ancb2020_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = gk, fill=NA, colour = "black", size = 1) +
geom_sf(data = ancbPACS, fill = NA) +
geom_sf_text(data = ancbPACS, aes(label = Community)) +
labs(x = NULL,
y = NULL,
title = "Ancuabe 2020 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colp,
labels = clasp) +
coord_sf(datum = st_crs(gk))
Ancb2020_classgk <- crop(Ancb2020_classbuf, gk)
Ancb2020_classgk <- mask(Ancb2020_classgk, st_zm(gk))
plot(Ancb2020_classgk)
trainancb2015    <- spatSample(ancb2015_train, 8000, method = "random")
table(as.character(trainancb2015$Classname))
trainancb2015xy  <- as.matrix(geom(trainancb2015)[,c('x','y')])
trainancb15      <- extract(ancb2015[[4:6]], trainancb2015xy)
trainancb15df      <- data.frame(class = trainancb2015$Classname, trainancb15)
trainancb15df2     <- cbind(trainancb15df, trainancb2015xy)
trainancb15SF       <- st_as_sf(trainancb15df2, coords = c("x", "y"), crs = moz_crs)
Ancb2015_class      <- superClass(ancb2015[[4:6]], trainancb15SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
Ancb2015_classdf    <- as.data.frame(Ancb2015_class$map, xy = TRUE)
Ancb2015_class
Ancb2015_classbuf <- crop(Ancb2015_class$map, gk_buf)
Ancb2015_classbuf <- mask(Ancb2015_class$map, gk_buf)
Ancb2015_classbufdf    <- as.data.frame(Ancb2015_classbuf, xy = TRUE)
Ancb2015_classbufdf_nna <- na.omit(Ancb2015_classbufdf)
ggplot() +
geom_tile(data = Ancb2015_classbufdf_nna, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = gk, fill=NA, colour = "black", size = 1) +
geom_sf(data = ancbPACS, fill = NA) +
geom_sf_text(data = ancbPACS, aes(label = Community)) +
labs(x = NULL,
y = NULL,
title = "Ancuabe 2015 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colb,
labels = clasb) +
coord_sf(datum = st_crs(gk))
Ancb2015_classgk <- crop(Ancb2015_classbuf, gk)
Ancb2015_classgk <- mask(Ancb2015_classgk, st_zm(gk))
plot(Ancb2015_classgk)
trainancb2009    <- spatSample(ancb2009_train, 8000, method = "random")
table(as.character(trainancb2009$Classname))
trainancb2009xy  <- as.matrix(geom(trainancb2009)[,c('x','y')])
trainancb09      <- extract(ancb2009[[3:5]], trainancb2009xy)
trainancb09df      <- data.frame(class = trainancb2009$Classname, trainancb09)
trainancb09df2     <- cbind(trainancb09df, trainancb2009xy)
trainancb09SF       <- st_as_sf(trainancb09df2, coords = c("x", "y"), crs = moz_crs)
Ancb2009_class      <- superClass(ancb2009[[4:6]], trainancb09SF, responseCol = "class", model = "mlc", trainPartition = 0.7)
Ancb2009_classdf    <- as.data.frame(Ancb2009_class$map, xy = TRUE)
Ancb2009_class
Ancb2009_classbuf <- crop(Ancb2009_class$map, gk_buf)
Ancb2009_classbuf <- mask(Ancb2009_classbuf, gk_buf)
Ancb2009_classbufdf    <- as.data.frame(Ancb2009_classbuf, xy = TRUE)
Ancb2009_classbufdf_nna <- na.omit(Ancb2009_classbufdf)
ggplot() +
geom_tile(data = Ancb2009_classbufdf, aes(x = x, y = y, fill = class_value)) +
geom_sf(data = gk, fill=NA, colour = "black", size = 1) +
geom_sf(data = ancbPACS, fill = NA) +
geom_sf_text(data = ancbPACS, aes(label = Community)) +
labs(x = NULL,
y = NULL,
title = "Ancuabe 2009 land use land cover") +
scale_fill_manual("LULC",
na.translate = FALSE,
values = colb,
labels = clasb) +
coord_sf(datum = st_crs(gk))
Ancb2009_classgk <- crop(Ancb2009_classbuf, gk)
Ancb2009_classgk <- mask(Ancb2009_classgk, st_zm(gk))
plot(Ancb2009_classgk)
# Change maps
# Palma
# 2020 - 2015
plma20_15 <-  B_classbuf - B_class15buf
plot(plma20_15)
plot(na.omit(plma20_15))
plot(na.omit(plma20_15))
# Change maps
# Palma
# 2020 - 2015
plma20_15 <-  na.omit(B_classbuf) - na.omit(B_class15buf)
plot(plma20_15)
plma20_08 <- B_classbuf - B_class08buf
plot(plma20_08)
plot(blma2021_ndvi-blma2009_ndvi)
freq(B_classbuf)*0.0009
freq(B_class15buf)*0.0009
freq(B_class08buf)*0.0009
freq(B_classTotal)*0.0009
freq(B_class15Total)*0.0009
freq(B_class08Total)*0.0009
B_class08Total <- crop(B_class08buf, total)
B_class08Total <- terra::mask(B_class08Total, st_zm(total))
freq(B_class08Total)*0.0009
freq(B_classbuf)*0.0009
freq(B_class15buf)*0.0009
freq(B_class08buf)*0.0009
freq(B_classTotal)*0.0009
freq(B_class15Total)*0.0009
freq(B_class08Total)*0.0009
freq(Blma2021_classbuf)*0.0009
freq(Blma2015_classbuf)*0.0009
freq(Blma2009_classbuf)*0.0009
freq(Blma2021_classSyrah)*0.0009
freq(Blma2015_classSyrah)*0.0009
freq(Blma2009_classSyrah)*0.0009
freq(Ancb2020_classbuf)*0.0009
freq(Ancb2015_classbuf)*0.0009
freq(Ancb2009_classbuf)*0.0009
freq(Ancb2020_classgk)*0.0009
freq(Ancb2015_classgk)*0.0009
freq(Ancb2009_classgk)*0.0009
writeRaster(palma2020class, file.path("~/results/output", "B_classbuf.tif"),
overwrite=TRUE, filetype="GTiff")
writeRaster(B_classbuf, file.path("~/results/output", "palma2020class.tif"),
overwrite=TRUE, filetype="GTiff")
writeRaster(B_class15buf, file.path("~/results/output", "palma2015class.tif"),
overwrite=TRUE, filetype="GTiff")
plot(total_buf)
writeRaster(total_buf, file.path("~/results/output", "total_buf.tif"),
overwrite=TRUE, filetype="GTiff")
writeVector(total_buf, file.path("~/results/output", "total_buf.shp"),
overwrite=TRUE)
st_write(total_buf, file.path("~/results/output", "total_buf.shp"),
overwrite=TRUE)
writeRaster(Blma2021_classbuf, file.path("~/results/output", "Balama2021class.tif"),
overwrite=TRUE, filetype="GTiff")
writeRaster(Blma2015_classbuf, file.path("~/results/output", "Balama2015class.tif"),
overwrite=TRUE, filetype="GTiff")
writeRaster(Ancb2020_classbuf, file.path("~/results/output", "Ancuabe2020class.tif"),
overwrite=TRUE, filetype="GTiff")
writeRaster(Ancb2015_classbuf, file.path("~/results/output", "Ancuabe2015class.tif"),
overwrite=TRUE, filetype="GTiff")
B_class$model
B_class$modelFit
B_class$training
B_class$validation
B_class
B_class15
Blma2021_class
Blma2015_class
Ancb2020_class
Ancb2015_class
